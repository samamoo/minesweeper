{"version":3,"sources":["Board/FlagCounter.js","Board/Timer.js","Board/Cell.js","Board/LevelSelector.js","Board/GameOverModal.js","Board/GameWinModal.js","helpers/helpers.js","Board/index.js","App.js","reportWebVitals.js","index.js"],"names":["FlagCounter","props","className","size","icon","faFlag","flagCount","library","add","Timer","faClock","time","Cell","cellClass","classnames","level","selected","flagged","gameOver","value","onClick","selectCell","onContextMenu","e","flagCell","faPoop","LevelSelector","name","id","onChange","selectLevel","defaultValue","GameOverModal","type","closeLoseModal","resetBoard","GameWinModal","closeWinModal","checkWin","board","bombs","rows","length","cols","toWin","selectedCount","x","y","Board","useState","startTimer","setStartTimer","setTime","setFlagCount","setBoard","setGameOver","setLevel","loseModal","setLoseModal","winModal","setWinModal","timer","useRef","openWinModal","useEffect","generateBoard","stopClock","clearInterval","current","grid","arr","bombLocations","bombCount","subArr","push","Math","floor","random","row","col","makeGrid","data","setInterval","prev","console","log","updateState","newNonMinesCount","flipped","single","pop","checkBlanks","preventDefault","JSON","parse","stringify","target","overlayClassName","isOpen","onRequestClose","map","val","key","Modal","setAppElement","faBroom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37e28ddd.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport './FlagCounter.css';\nlibrary.add(faFlag); \n\nexport default function FlagCounter(props) {\n  return(\n    <div className=\"counter\">\n      <FontAwesomeIcon className=\"faFlag\" size=\"1x\" icon={faFlag}/>\n      <p><strong>{props.flagCount}</strong></p>\n    </div>\n  )\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport './Timer.css';\nlibrary.add(faClock); \n\nexport default function Timer(props) {\n  return(\n    <div className=\"timer\">\n      <FontAwesomeIcon className=\"faClock\" size=\"1x\" icon={faClock}/>\n      <p><strong>{props.time}</strong></p>\n    </div>\n  )\n}","import React from 'react';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPoop, faFlag } from '@fortawesome/free-solid-svg-icons';\nimport './Cell.css';\nlibrary.add(faPoop,faFlag);\n\nexport default function Cell(props) {\n\n  const cellClass = classnames(\"cell\", {\n    \"cell--easy\": props.level === \"easy\",\n    \"cell--med\": props.level === \"med\",\n    \"cell--selected\": props.selected,\n    \"cell--flagged\": props.flagged && !props.gameOver &&\n    !props.selected,\n    \"cell--bomb\":  props.value === \"bomb\" && props.gameOver,\n  });\n\n\n  return(\n    <div className={cellClass} selected={props.selected} flagged={props.flagged} \n    onClick={() => props.selectCell(props)}\n    onContextMenu={(e)=> props.flagCell(e, props)}>\n      { props.value === \"bomb\" && \n      props.gameOver && \n      <FontAwesomeIcon size=\"lg\" icon={faPoop}/>\n      }\n      {props.flagged && \n      !props.gameOver &&\n      !props.selected &&\n      <FontAwesomeIcon size=\"lg\" icon={faFlag}/>\n      }\n      {props.selected && \n      props.value !== \"bomb\" && \n      props.value !== 0 &&\n      <p>{props.value}</p>}\n    </div>\n  )\n}","import React from 'react';\nimport './LevelSelector.css';\n\nexport default function LevelSelector(props) {\n  return(\n    <div>\n      <form>\n          <select name=\"level\" id=\"level\" onChange={(e) => props.selectLevel(e)} defaultValue=\"med\">\n            <option value=\"easy\">Easy</option>\n            <option value=\"med\">Medium</option>\n          </select>\n        </form>\n    </div>\n  )\n}","import React from 'react';\nimport './GameOverModal.css';\n\nexport default function GameOverModal(props) {\n  return(\n    <div className=\"game-over\">\n      <div className=\"game-over-message\">\n        <h1>GAME OVER!</h1>\n        <h4>You stepped in the doo-doo!</h4>\n      </div>\n      <div className=\"game-buttons\">\n        <button className=\"cancel-button\" type=\"button\" onClick={props.closeLoseModal}>Cancel</button>\n        <button className=\"new-game-button\" type=\"button\" onClick={() => props.resetBoard(props.level)}>Start New Game</button>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport './GameOverModal.css';\n\nexport default function GameWinModal(props) {\n  return(\n    <div className=\"game-over\">\n      <div className=\"game-over-message\">\n        <h1>YOU WIN!</h1>\n        <h4>You dodged all of the doo-doo!</h4>\n        <h4>Your time is {props.time} seconds!</h4>\n      </div>\n      <div className=\"game-buttons\">\n        <button className=\"cancel-button\" type=\"button\" onClick={props.closeWinModal}>Cancel</button>\n        <button className=\"new-game-button\" type=\"button\" onClick={() => props.resetBoard(props.level)}>Start New Game</button>\n      </div>\n    </div>\n  )\n}","// Build a board with set rows and columns\nconst makeGrid = (rows, cols, bombs) => {\n  let arr = [];\n  let bombLocations = [];\n  let bombCount = 0;\n  // Create rows\n  for (let x = 0; x < rows; x++) {\n    let subArr = [];\n    // For each col, create a cell with values in each row\n    for (let y = 0; y < cols; y++) {\n      subArr.push({\n        selected: false, \n        value: 0,\n        flagged: false,\n        x: x,\n        y: y,\n      })\n    }\n    arr.push(subArr);\n  }\n  // Generate & save random xy coordinates for the 40 bombs\n  while (bombCount < bombs) {\n    let x = Math.floor(Math.random()*rows);\n    let y = Math.floor(Math.random()*cols);\n    if (arr[x][y].value === 0) {\n      arr[x][y].value = \"bomb\";\n      bombLocations.push([x,y]);\n      bombCount++;\n    }\n  }\n\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < cols; col++) {\n      // If the cell is a bomb, skip\n      if (arr[row][col].value === \"bomb\") {\n        continue;\n      }\n      // Cell above is a bomb\n      if (row > 0 && arr[row-1][col].value === \"bomb\") {\n        arr[row][col].value++;\n      }\n      // Cell above and to the right of the bomb\n      if (row > 0 && col < cols-1 && arr[row-1][col+1].value === \"bomb\") {\n        arr[row][col].value++;\n      }\n      // Cell above and to the left of the bomb\n      if (row > 0 && col > 0 && arr[row-1][col-1].value === \"bomb\") {\n        arr[row][col].value++;\n      }\n      // Cell to the right is a bomb\n      if (col < cols-1 && arr[row][col+1].value === \"bomb\") {\n        arr[row][col].value++;\n      }\n      // Cell to the left is a bomb\n      if (col > 0 && arr[row][col-1].value === \"bomb\") {\n        arr[row][col].value++;\n      }\n      // Cell below is a bomb\n      if (row < rows-1 && arr[row+1][col].value === \"bomb\") {\n        arr[row][col].value++;\n      }\n      // Cell below and to the right is bomb\n      if (row < rows-1 && col < cols-1 && arr[row+1][col+1].value === \"bomb\") {\n        arr[row][col].value++;\n      }\n      // Cell below and to the left is a bomb\n      if (row < rows-1 && col > 0 && arr[row+1][col-1].value === \"bomb\") {\n        arr[row][col].value++\n      }\n    }\n  }\n  return arr;\n}\n\nconst checkBlanks = (board, x, y, newNonMinesCount) => {\n  if (board[x][y].selected) {\n    return board;\n  }\n\n  let flipped = [];\n  flipped.push(board[x][y]);\n  while (flipped.length !== 0) {\n    let single = flipped.pop();\n    if (!single.selected) {\n      newNonMinesCount--;\n      single.selected = true;\n    }\n    if (single.value !== 0) {\n      break;\n    }\n    // Top Left\n    if (single.x > 0 && single.y > 0 &&\n      board[single.x-1][single.y-1].value === 0 &&\n      !board[single.x-1][single.y-1].selected) \n      {\n        flipped.push(board[single.x-1][single.y-1]);\n      }\n      // Top Right\n    if (single.x < board.length-1 &&\n      single.y < board[0].length-1 &&\n      board[single.x+1][single.y+1].value === 0 &&\n      !board[single.x+1][single.y+1].selected) \n      {\n        flipped.push(board[single.x+1][single.y+1])\n      }\n      // Bottom Left\n    if (single.x < board.length -1 &&\n      single.y > 0 &&\n      board[single.x+1][single.y-1].value === 0 && \n      !board[single.x+1][single.y-1].selected)\n      {\n        flipped.push(board[single.x+1][single.y-1])\n      }\n      // Bottom Right\n    if (single.x > 0 &&\n      single.y < board[0].length-1 &&\n      board[single.x-1][single.y+1].value === 0 &&\n      !board[single.x-1][single.y+1].selected)\n      {\n        flipped.push(board[single.x-1][single.y+1])\n      }\n      // Top\n    if (single.x > 0 &&\n      board[single.x-1][single.y].value === 0 &&\n      !board[single.x-1][single.y].selected) \n      {\n        flipped.push(board[single.x-1][single.y])\n      } \n      // Bottom\n    if (single.x < board.length-1 &&\n      board[single.x+1][single.y].value === 0 &&\n      !board[single.x+1][single.y].selected) \n      {\n        flipped.push(board[single.x+1][single.y])\n      }\n      // Right\n    if (single.y < board[0].length-1 &&\n      board[single.x][single.y+1].value === 0 &&\n      !board[single.x][single.y+1].selected) \n      {\n        flipped.push(board[single.x][single.y+1])\n      }\n      // Left\n    if (single.y > 0 &&\n      board[single.x][single.y-1].value === 0 &&\n      !board[single.x][single.y-1].selected) \n      {\n        flipped.push(board[single.x][single.y-1])\n      }\n    \n      // Reveal\n      // Top Left\n    if (single.x > 0 &&\n      single.y > 0 &&\n      !board[single.x-1][single.y-1].selected)\n      {\n        board[single.x-1][single.y-1].selected = true;\n        newNonMinesCount--;\n      }\n      // Top\n    if (single.x > 0 &&\n      !board[single.x-1][single.y].selected) {\n        board[single.x-1][single.y].selected = true;\n        newNonMinesCount--;\n      }\n      // Top Right\n    if (single.x > 0 &&\n      single.y < board[0].length-1 &&\n      !board[single.x-1][single.y+1].selected) {\n        board[single.x-1][single.y+1].selected = true;\n        newNonMinesCount--;\n      }\n      // Left\n    if (single.y > 0 &&\n      !board[single.x][single.y-1].selected) {\n        board[single.x][single.y-1].selected = true;\n        newNonMinesCount--;\n      }\n      // Right\n    if (single.y < board[0].length-1 &&\n      !board[single.x][single.y+1].selected) {\n        board[single.x][single.y+1].selected = true;\n        newNonMinesCount--;\n      }\n      // Bottom Left\n    if (single.x < board.length-1 &&\n      single.y > 0 &&\n      !board[single.x+1][single.y-1].selected) {\n        board[single.x+1][single.y-1].selected = true;\n        newNonMinesCount--;\n      }\n      // Bottom\n    if (single.x < board.length-1 &&\n      !board[single.x+1][single.y].selected) {\n        board[single.x+1][single.y].selected = true;\n        newNonMinesCount--;\n    }\n      // Bottom Right\n    if (single.x < board.length-1 &&\n      single.y < board[0].length-1 &&\n      !board[single.x+1][single.y+1].selected) {\n        board[single.x+1][single.y+1].selected = true;\n        newNonMinesCount--;\n      }\n  }\n  return { board, newNonMinesCount}\n}\n\nconst checkWin = (board, bombs) => {\n  let rows = board.length;\n  let cols = board[0].length;\n  let toWin = (rows*cols)-bombs;\n  let selectedCount = 0;\n  for (let x = 0; x < rows; x++) {\n    for (let y = 0; y < cols; y++) {\n      if (board[x][y].selected === true && board[x][y].value !== \"bomb\") {\n        selectedCount++;\n      }\n    }\n  }\n  if (selectedCount === toWin) {\n    return true;\n  }\n  return false;\n}\n\nexport { makeGrid, checkWin, checkBlanks }\n\n// The game board\n// [\n//   [{cell},{cell},{cell},{cell},],\n//   [{cell},{cell},{cell},{cell},],\n//   [{cell},{cell},{cell},{cell},],\n//   [{cell},{cell},{cell},{cell},],\n// ]\n\n// Each cell in a row has these values\n// {\n//   selected: false, \n//   value: 0,\n//   flagged: false,\n//   x: x,\n//   y: y,\n// }","import React, { useState, useEffect, useRef } from 'react';\nimport Modal from 'react-modal';\n// Components\nimport FlagCounter from './FlagCounter';\nimport Timer from './Timer';\nimport Cell from './Cell';\nimport LevelSelector from './LevelSelector';\nimport GameOverModal from './GameOverModal';\nimport GameWinModal from './GameWinModal';\n// Helpers\nimport { makeGrid, checkWin, checkBlanks } from '../helpers/helpers';\n// Styles\nimport './index.css';\nModal.setAppElement('div');\n\nexport default function Board() {\n  const [ startTimer, setStartTimer ] = useState(false);\n  const [ time, setTime ] = useState(0);\n  const [ flagCount, setFlagCount ] = useState(40);\n  const [ board, setBoard ] = useState([]); \n  const [ gameOver, setGameOver ] = useState(false);\n  const [ level, setLevel ] = useState(\"med\");\n  const [ loseModal, setLoseModal ] = useState(false);\n  const [ winModal, setWinModal ] = useState(false);\n  let timer = useRef(null);\n\n  // Open/Close GameOver modal\n  const openLoseModal = () => {\n    setLoseModal(true);\n  }\n  const closeLoseModal = () => {\n    setLoseModal(false);\n  }\n  const openWinModal = () => {\n    setWinModal(true);\n  }\n  const closeWinModal = () => {\n    setWinModal(false);\n  }\n\n  // Create a new board on page load\n  useEffect(() => {\n    generateBoard(16, 16, 40);\n  },[]);\n\n  // Start the clock\n  const clockBegin = () => {\n    timer.current = setInterval(() => {\n      setTime((prev) => prev +1)\n    }, 1000); \n  }\n  const stopClock = () => {\n    clearInterval(timer.current);\n  }\n\n  // Create the board and set state of the board\n  const generateBoard = (rows, cols, bombs) => {\n    let grid = makeGrid(rows, cols, bombs);\n    setBoard(grid);\n  }\n\n  // Reset the board and all state\n  const resetBoard = (level) => {\n    if (level === \"med\") {\n      generateBoard(16, 16, 40);\n      setFlagCount(40);\n    } else if (level === \"easy\") {\n      generateBoard(10, 10, 15);\n      setFlagCount(15);\n    }\n    setGameOver(false);\n    setTime(0);\n    setStartTimer(false);\n    stopClock();\n    closeLoseModal();\n    closeWinModal();\n  }\n\n  // Select a Cell / On Left Click\n  const selectCell = (data) => {\n    if (!startTimer) {\n      setStartTimer(true);\n      clockBegin();\n    }\n    if (data.value === \"bomb\") {\n      console.log(\"GAME OVER\");\n      setGameOver(true);\n      stopClock();\n      openLoseModal();\n    }\n    let updateState = board;\n    if (updateState[data.x][data.y].flagged === true) {\n      updateState[data.x][data.y].flagged = false;\n      setFlagCount(flagCount+1)\n    }\n    if (updateState[data.x][data.y].value === 0) {\n      const newBoard = checkBlanks(board, data.x, data.y);\n      updateState = newBoard.board;\n    }\n    updateState[data.x][data.y].selected = true;\n    setBoard(updateState);\n    if (data.level === \"easy\" && checkWin(updateState, 15)) {\n      console.log(\"WINNER WINNER CHICKEN DINNER\")\n      stopClock();\n      openWinModal();\n    }\n    if (data.level === \"med\" && checkWin(updateState, 40)) {\n      console.log(\"WINNER WINNER CHICKEN DINNER\")\n      stopClock();\n      openWinModal();\n    }\n  }\n  \n  // Flag a Cell / On Right Click\n  const flagCell = (e, data) => {\n    e.preventDefault();\n    let updateState = JSON.parse(JSON.stringify(board));\n    if (updateState[data.x][data.y].flagged === true) {\n      updateState[data.x][data.y].flagged = false;\n      setFlagCount(flagCount+1)\n    } else {\n      updateState[data.x][data.y].flagged = true;\n      setFlagCount(flagCount-1)\n    }\n    setBoard(updateState)\n  }\n\n  // Select level/difficulty\n  const selectLevel = (e) => {\n    if (e.target.value === \"easy\") {\n      setLevel(\"easy\");\n      setFlagCount(15);\n      generateBoard( 10, 10, 15);\n    }\n    if (e.target.value === \"med\") {\n      setLevel(\"med\");\n      setFlagCount(40);\n      generateBoard(16, 16, 40);\n    }\n    resetBoard(e.target.value);\n  }\n\n  // If the board is not loaded, display Loading...\n  if (!board) {\n    return(\n      <div>LOADING...</div>\n    )\n  }\n  \n  return( board &&\n    <div className=\"board\">\n      <header className=\"board-header\">\n        <LevelSelector selectLevel={selectLevel}/>\n        <FlagCounter flagCount={flagCount}/>\n        <Timer time={time}/>\n        <button className=\"new-game-button\" type=\"button\" onClick={() => resetBoard(level)}>New Game</button>\n      </header>\n\n      <Modal className=\"game-over-modal\" overlayClassName=\"modal-overlay\" isOpen={loseModal} onRequestClose={() => setLoseModal(false)}>\n        <GameOverModal closeLoseModal={closeLoseModal} resetBoard={resetBoard} level={level}/>\n      </Modal>\n      <Modal className=\"game-over-modal\" overlayClassName=\"modal-overlay\" isOpen={winModal} onRequestClose={() => setWinModal(false)}>\n        <GameWinModal closeWinModal={closeWinModal} resetBoard={resetBoard} level={level} time={time}/>\n      </Modal>\n\n      <div className=\"board-container\">\n        {board.map((val, key) => {\n          return(\n            val.map((value, key) => {\n              return(\n                <Cell \n                value={value.value}\n                selected={value.selected}\n                flagged={value.flagged}\n                x={value.x}\n                y={value.y}\n                gameOver={gameOver}\n                selectCell={selectCell}\n                flagCell={flagCell}\n                level={level}\n                />\n              )\n            })\n          )\n        })}\n      </div>\n    </div>\n  )\n}","import Board from './Board/index';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPoop, faBroom} from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nlibrary.add(faPoop, faBroom);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>WELCOME TO TURDSWEEPER</h1>\n        <h2>DON'T STEP IN THE DOO-DOO!</h2>\n      </header>\n      <div className=\"app-icons\">\n        <FontAwesomeIcon className=\"poop-icon\" size=\"4x\" icon={faPoop}/>\n        <FontAwesomeIcon className=\"broom-icon\" size=\"4x\" icon={faBroom}/>\n      </div>\n      <Board/>\n      {/* <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}